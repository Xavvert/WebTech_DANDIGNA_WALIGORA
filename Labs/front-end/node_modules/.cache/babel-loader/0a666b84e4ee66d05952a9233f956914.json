{"ast":null,"code":"var _jsxFileName = \"/Users/paulwaligora/Documents/ing-4/Web-Developpement/WebTech_DANDIGNA_WALIGORA/Labs/lab7/front-end/src/Main.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { useState, useContext } from \"react\"; // Layout\n\nimport { useTheme } from '@mui/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { Drawer } from '@mui/material'; // Local\n\nimport Channels from './Channels';\nimport Channel from './Channel';\nimport Welcome from './Welcome';\nimport { UserContext } from \"./AppContext\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  main: {\n    backgroundColor: '#373B44',\n    overflow: 'hidden',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'relative'\n  },\n  drawer: {\n    width: '200px',\n    display: 'none'\n  },\n  drawerVisible: {\n    display: 'block'\n  }\n});\n\nexport default function Main(_ref) {\n  _s();\n\n  let {\n    drawerMobileVisible\n  } = _ref;\n  const user = useContext(UserContext);\n  alert(user);\n  const [channel, setChannel] = useState(null);\n\n  const fetchChannel = async channel => {\n    setChannel(channel);\n  };\n\n  const theme = useTheme();\n  const styles = useStyles(theme);\n  const alwaysOpen = useMediaQuery(theme.breakpoints.up('sm'));\n  const isDrawerVisible = alwaysOpen || drawerMobileVisible;\n  return _jsxDEV(\"main\", {\n    css: styles.main,\n    children: [_jsxDEV(Drawer, {\n      PaperProps: {\n        style: {\n          position: 'relative'\n        }\n      },\n      BackdropProps: {\n        style: {\n          position: 'relative'\n        }\n      },\n      ModalProps: {\n        style: {\n          position: 'relative'\n        }\n      },\n      variant: \"persistent\",\n      open: isDrawerVisible,\n      css: [styles.drawer, isDrawerVisible && styles.drawerVisible],\n      children: _jsxDEV(Channels, {\n        onChannel: fetchChannel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), channel ? _jsxDEV(Channel, {\n      channel: channel,\n      messages: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this) : _jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 64\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"hH4wh6MrqgeM1a6XQ8GPmXPgSEI=\", false, function () {\n  return [useTheme, useStyles, useMediaQuery];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/paulwaligora/Documents/ing-4/Web-Developpement/WebTech_DANDIGNA_WALIGORA/Labs/lab7/front-end/src/Main.js"],"names":["useState","useContext","useTheme","useMediaQuery","Drawer","Channels","Channel","Welcome","UserContext","useStyles","theme","main","backgroundColor","overflow","flex","display","flexDirection","position","drawer","width","drawerVisible","Main","drawerMobileVisible","user","alert","channel","setChannel","fetchChannel","styles","alwaysOpen","breakpoints","up","isDrawerVisible","style"],"mappings":";;;AACA;AACA,SAAQA,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,MAAR,QAAqB,eAArB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,WAAR,QAA0B,cAA1B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,KAAY;AAC5BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,QAAQ,EAAE,QAFN;AAGJC,IAAAA,IAAI,EAAE,UAHF;AAIJC,IAAAA,OAAO,EAAE,MAJL;AAKJC,IAAAA,aAAa,EAAE,KALX;AAMJC,IAAAA,QAAQ,EAAE;AANN,GADsB;AAS5BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,OADD;AAENJ,IAAAA,OAAO,EAAE;AAFH,GAToB;AAa5BK,EAAAA,aAAa,EAAE;AACbL,IAAAA,OAAO,EAAE;AADI;AAba,CAAZ,CAAlB;;AAkBA,eAAe,SAASM,IAAT,OAEZ;AAAA;;AAAA,MAF0B;AAC3BC,IAAAA;AAD2B,GAE1B;AACD,QAAMC,IAAI,GAACtB,UAAU,CAACO,WAAD,CAArB;AACAgB,EAAAA,KAAK,CAACD,IAAD,CAAL;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAM2B,YAAY,GAAG,MAAOF,OAAP,IAAmB;AACtCC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAFD;;AAGA,QAAMf,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAM0B,MAAM,GAAGnB,SAAS,CAACC,KAAD,CAAxB;AACA,QAAMmB,UAAU,GAAG1B,aAAa,CAACO,KAAK,CAACoB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,CAAhC;AACA,QAAMC,eAAe,GAAGH,UAAU,IAAIP,mBAAtC;AACA,SACE;AAAM,IAAA,GAAG,EAAEM,MAAM,CAACjB,IAAlB;AAAA,eACE,QAAC,MAAD;AACE,MAAA,UAAU,EAAE;AAAEsB,QAAAA,KAAK,EAAE;AAAEhB,UAAAA,QAAQ,EAAE;AAAZ;AAAT,OADd;AAEE,MAAA,aAAa,EAAE;AAAEgB,QAAAA,KAAK,EAAE;AAAEhB,UAAAA,QAAQ,EAAE;AAAZ;AAAT,OAFjB;AAGE,MAAA,UAAU,EAAE;AACVgB,QAAAA,KAAK,EAAE;AAAEhB,UAAAA,QAAQ,EAAE;AAAZ;AADG,OAHd;AAME,MAAA,OAAO,EAAC,YANV;AAOE,MAAA,IAAI,EAAEe,eAPR;AAQE,MAAA,GAAG,EAAE,CAACJ,MAAM,CAACV,MAAR,EAAgBc,eAAe,IAAIJ,MAAM,CAACR,aAA1C,CARP;AAAA,gBAUE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEO;AAArB;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YADF,EAaGF,OAAO,GAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,OAAlB;AAA2B,MAAA,QAAQ,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiD,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAb3D;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9BuBJ,I;UASRnB,Q,EACCO,S,EACIN,a;;;KAXGkB,I","sourcesContent":["\n/** @jsxImportSource @emotion/react */\nimport {useState, useContext} from \"react\"\n// Layout\nimport { useTheme } from '@mui/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport {Drawer} from '@mui/material';\n// Local\nimport Channels from './Channels'\nimport Channel from './Channel'\nimport Welcome from './Welcome'\nimport {UserContext} from \"./AppContext\";\n\nconst useStyles = (theme) => ({\n  main: {\n    backgroundColor: '#373B44',\n    overflow: 'hidden',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'relative',\n  },\n  drawer: {\n    width: '200px',\n    display: 'none',\n  },\n  drawerVisible: {\n    display: 'block',\n  },\n})\n\nexport default function Main({\n  drawerMobileVisible,\n}) {\n  const user=useContext(UserContext);\n  alert(user);\n  const [channel, setChannel] = useState(null)\n  const fetchChannel = async (channel) => {\n    setChannel(channel)\n  }\n  const theme = useTheme()\n  const styles = useStyles(theme)\n  const alwaysOpen = useMediaQuery(theme.breakpoints.up('sm'))\n  const isDrawerVisible = alwaysOpen || drawerMobileVisible\n  return (\n    <main css={styles.main}>\n      <Drawer\n        PaperProps={{ style: { position: 'relative' } }}\n        BackdropProps={{ style: { position: 'relative' } }}\n        ModalProps={{\n          style: { position: 'relative' }\n        }}\n        variant=\"persistent\"\n        open={isDrawerVisible}\n        css={[styles.drawer, isDrawerVisible && styles.drawerVisible]}\n      >\n        <Channels onChannel={fetchChannel} />\n      </Drawer>\n      {channel ? <Channel channel={channel} messages={[]} /> : <Welcome />}\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}